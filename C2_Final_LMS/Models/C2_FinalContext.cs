// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace C2_Final.Models;

public partial class C2_FinalContext : DbContext
{
    public C2_FinalContext(DbContextOptions<C2_FinalContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Driver> Drivers { get; set; }

    public virtual DbSet<Infraction> Infractions { get; set; }

    public virtual DbSet<Login> Logins { get; set; }

    public virtual DbSet<Vehicle> Vehicles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Driver>(entity =>
        {
            entity.HasKey(e => e.DriversLicenseNumber);

            entity.Property(e => e.DriversLicenseNumber).ValueGeneratedNever();
            entity.Property(e => e.DriverBday)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DriverBDay");
            entity.Property(e => e.DriverFname)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DriverFName");
            entity.Property(e => e.DriverLname)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DriverLName");
            entity.Property(e => e.Ssn)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SSN");
        });

        modelBuilder.Entity<Infraction>(entity =>
        {
            entity.HasKey(e => e.InfractionsId);

            entity.Property(e => e.InfractionsId)
                .ValueGeneratedNever()
                .HasColumnName("InfractionsID");
            entity.Property(e => e.InfractionsName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VehiclesYear)
                .HasMaxLength(10)
                .IsFixedLength();

            entity.HasOne(d => d.DriversLicenseNumberNavigation).WithMany(p => p.Infractions)
                .HasForeignKey(d => d.DriversLicenseNumber)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Infractions_Drivers");

            entity.HasOne(d => d.LicensePlateNumberNavigation).WithMany(p => p.Infractions)
                .HasForeignKey(d => d.LicensePlateNumber)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Infractions_Vehicles");
        });

        modelBuilder.Entity<Login>(entity =>
        {
            entity.HasKey(e => e.LoginId).HasName("PK__login__1F5EF42F8D58329A");

            entity.ToTable("login");

            entity.Property(e => e.LoginId)
                .ValueGeneratedNever()
                .HasColumnName("loginID");
            entity.Property(e => e.LoginPassword)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("loginPassword");
            entity.Property(e => e.LoginUsername)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("loginUsername");
            entity.Property(e => e.Role)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Vehicle>(entity =>
        {
            entity.HasKey(e => e.LicensePlateNumber);

            entity.Property(e => e.LicensePlateNumber).ValueGeneratedNever();
            entity.Property(e => e.VehiclesName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VehiclesYear)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Vehiclescolor)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Vehiclesmodal)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}